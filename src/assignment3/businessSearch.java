/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment3;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import java.awt.Component;
import java.awt.GridLayout;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.table.DefaultTableModel;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author Divya
 */
public class businessSearch extends javax.swing.JFrame {

    /**
     * Creates new form businessSearch
     */
    public businessSearch() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        main_category_scroll = new javax.swing.JScrollPane();
        main_category = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jCheckBox13 = new javax.swing.JCheckBox();
        jCheckBox14 = new javax.swing.JCheckBox();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox16 = new javax.swing.JCheckBox();
        jCheckBox17 = new javax.swing.JCheckBox();
        jCheckBox18 = new javax.swing.JCheckBox();
        jCheckBox19 = new javax.swing.JCheckBox();
        jCheckBox20 = new javax.swing.JCheckBox();
        jCheckBox21 = new javax.swing.JCheckBox();
        jCheckBox22 = new javax.swing.JCheckBox();
        jCheckBox23 = new javax.swing.JCheckBox();
        jCheckBox24 = new javax.swing.JCheckBox();
        jCheckBox25 = new javax.swing.JCheckBox();
        jCheckBox26 = new javax.swing.JCheckBox();
        jCheckBox27 = new javax.swing.JCheckBox();
        jCheckBox28 = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        subCategory = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        AttributeList = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        andor = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        business_query = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        review_query = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        business_table = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        review_table = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        from_date = new org.jdesktop.swingx.JXDatePicker();
        to_date = new org.jdesktop.swingx.JXDatePicker();
        star_range = new javax.swing.JComboBox<>();
        votes_range = new javax.swing.JComboBox<>();
        star_value = new javax.swing.JTextField();
        vote_value = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jCheckBox1.setText("Active Life");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Arts & En");

        jCheckBox3.setText("Automative");

        jCheckBox4.setText("Car Rental");

        jCheckBox5.setText("Cafes");

        jCheckBox6.setText("Beauty & Spas");

        jCheckBox7.setText("Convenience Stores");

        jCheckBox8.setText("Dentists");

        jCheckBox9.setText("Doctors");

        jCheckBox10.setText("Drugstores");

        jCheckBox11.setText("Departmnet Stores");

        jCheckBox12.setText("Education");

        jCheckBox13.setText("Event Planning & Services");

        jCheckBox14.setText("Flowers & Gifts");

        jCheckBox15.setText("Food");
        jCheckBox15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox15ActionPerformed(evt);
            }
        });

        jCheckBox16.setText("Health & Medical");

        jCheckBox17.setText("Home Services");

        jCheckBox18.setText("Home & Garden");

        jCheckBox19.setText("Hospitals");

        jCheckBox20.setText("Hotels & Travel");

        jCheckBox21.setText("Hardware Stores");

        jCheckBox22.setText("Grocery");

        jCheckBox23.setText("Medical Centers");

        jCheckBox24.setText("Nurseries & Gardening");

        jCheckBox25.setText("Nightlife");

        jCheckBox26.setText("Restaurants");

        jCheckBox27.setText("Shopping");

        jCheckBox28.setText("Transportation");

        javax.swing.GroupLayout main_categoryLayout = new javax.swing.GroupLayout(main_category);
        main_category.setLayout(main_categoryLayout);
        main_categoryLayout.setHorizontalGroup(
            main_categoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(main_categoryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(main_categoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(main_categoryLayout.createSequentialGroup()
                        .addGroup(main_categoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox1)
                            .addComponent(jCheckBox2)
                            .addComponent(jCheckBox3)
                            .addComponent(jCheckBox4)
                            .addComponent(jCheckBox8)
                            .addComponent(jCheckBox11)
                            .addComponent(jCheckBox12)
                            .addComponent(jCheckBox13)
                            .addComponent(jCheckBox14)
                            .addComponent(jCheckBox10)
                            .addComponent(jCheckBox20)
                            .addComponent(jCheckBox5)
                            .addComponent(jCheckBox15)
                            .addComponent(jCheckBox7))
                        .addContainerGap(418, Short.MAX_VALUE))
                    .addGroup(main_categoryLayout.createSequentialGroup()
                        .addGroup(main_categoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox9)
                            .addComponent(jCheckBox26)
                            .addComponent(jCheckBox27)
                            .addComponent(jCheckBox28)
                            .addComponent(jCheckBox17)
                            .addComponent(jCheckBox16)
                            .addComponent(jCheckBox18)
                            .addComponent(jCheckBox23)
                            .addComponent(jCheckBox25)
                            .addComponent(jCheckBox24)
                            .addComponent(jCheckBox22)
                            .addComponent(jCheckBox6)
                            .addComponent(jCheckBox21)
                            .addComponent(jCheckBox19))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        main_categoryLayout.setVerticalGroup(
            main_categoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(main_categoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox6)
                .addGap(1, 1, 1)
                .addGroup(main_categoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(main_categoryLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jCheckBox5))
                    .addComponent(jCheckBox20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox15)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        main_category_scroll.setViewportView(main_category);

        javax.swing.GroupLayout subCategoryLayout = new javax.swing.GroupLayout(subCategory);
        subCategory.setLayout(subCategoryLayout);
        subCategoryLayout.setHorizontalGroup(
            subCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 241, Short.MAX_VALUE)
        );
        subCategoryLayout.setVerticalGroup(
            subCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 441, Short.MAX_VALUE)
        );

        jScrollPane3.setViewportView(subCategory);

        javax.swing.GroupLayout AttributeListLayout = new javax.swing.GroupLayout(AttributeList);
        AttributeList.setLayout(AttributeListLayout);
        AttributeListLayout.setHorizontalGroup(
            AttributeListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 206, Short.MAX_VALUE)
        );
        AttributeListLayout.setVerticalGroup(
            AttributeListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 441, Short.MAX_VALUE)
        );

        jScrollPane4.setViewportView(AttributeList);

        jButton1.setText("Generate Sub Category");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Generate Attibutes");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetAttributes(evt);
            }
        });

        andor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "and", "or" }));
        andor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                none(evt);
            }
        });

        jButton3.setText("Execute Query");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeQuery(evt);
            }
        });

        business_query.setColumns(20);
        business_query.setLineWrap(true);
        business_query.setRows(5);
        jScrollPane1.setViewportView(business_query);

        jLabel1.setText("Query Executed:");

        jLabel2.setText("Review Query");

        review_query.setColumns(20);
        review_query.setLineWrap(true);
        review_query.setRows(5);
        jScrollPane2.setViewportView(review_query);

        jLabel3.setText("Select AND or OR operation");

        business_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Business ID", "Business name", "State", "Stars"
            }
        ));
        business_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                getBusinessData(evt);
            }
        });
        jScrollPane5.setViewportView(business_table);

        review_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "review id", "reviewed user", "user name"
            }
        ));
        review_table.setColumnSelectionAllowed(true);
        jScrollPane6.setViewportView(review_table);

        jLabel4.setText("Reviews");

        jLabel5.setText("from");

        jLabel6.setText("to");

        jLabel7.setText("star:");

        jLabel8.setText("value");

        jLabel9.setText("votes");

        jLabel10.setText("value");

        star_range.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ">", "<", "=", ">=", "<=" }));

        votes_range.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ">", "<", "=", ">=", "<=" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(main_category_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(to_date, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(from_date, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(star_range, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(star_value, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(votes_range, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(vote_value, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(302, 302, 302)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jButton1)
                        .addGap(37, 37, 37)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(andor, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(176, 176, 176)
                        .addComponent(jLabel4)))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2))))
                .addContainerGap(197, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(andor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(from_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(to_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(star_range, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(star_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(votes_range, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(vote_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(main_category_scroll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(47, 47, 47)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(109, 109, 109))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(306, 306, 306))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox15ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        
        try {
            Connection con = null;
            DBConnection dbcontection = new DBConnection();
            con = dbcontection.openConnection();
            String query ="";
            ArrayList<String> busnSel = new ArrayList<String>();
            for(Component c: main_category.getComponents()){
                if(c.getClass().equals(javax.swing.JCheckBox.class)){
                    JCheckBox jcb = (JCheckBox) c;
                    if(jcb.isSelected()){
                        busnSel.add(jcb.getText());
                    }
                }
            }
            query = query+"select distinct busnsubcat from businesscategory where ";

               for(int i =0;i<busnSel.size();i++){
                if(i == busnSel.size() - 1){
                    query = query+"busncatgname = '"+busnSel.get(i)+"'";
                }else{
                    query = query+" busncatgname = '"+busnSel.get(i)+"' OR ";
                }
            }
            subCategory.removeAll();
            System.out.println(query);
            PreparedStatement ps = con.prepareStatement(query);

            ResultSet res= ps.executeQuery();
            ArrayList subCategorys = new ArrayList();
            while (res.next()){
                String result = res.getString(1)+"\n";
                JCheckBox newChBox = new JCheckBox();
                newChBox.setText(result);
                subCategorys.add(newChBox);
            }
            subCategory.setLayout(new GridLayout(0,2,10,10));
            for(Object ch : subCategorys){
                subCategory.add((Component) ch);
                subCategory.revalidate();
                subCategory.repaint();
            }
        } catch (SQLException ex) {
            Logger.getLogger(businessSearch.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void GetAttributes(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetAttributes
        try {
            // TODO add your handling code here:
            Connection con = null;
            DBConnection dbcontection = new DBConnection();
            con = dbcontection.openConnection();
            String query ="";
            ArrayList<String> busnSel = new ArrayList<String>();
            String and_or = (String) andor.getSelectedItem().toString();
            for(Component c: main_category.getComponents()){
                if(c.getClass().equals(javax.swing.JCheckBox.class)){
                    JCheckBox jcb = (JCheckBox) c;
                    if(jcb.isSelected()){
                        busnSel.add(jcb.getText());
                    }
                }
            }
            ArrayList<String> busnSubSel = new ArrayList<String>();
            for(Component c: subCategory.getComponents()){
                if(c.getClass().equals(javax.swing.JCheckBox.class)){
                    JCheckBox jcb = (JCheckBox) c;
                    if(jcb.isSelected()){
                        busnSubSel.add(jcb.getText());
                    }
                }
            }
//            System.out.println("busnSel"+busnSel);
//            System.out.println("busnSubSel"+busnSubSel);
//            

            query = query+"select business_id,atrributes from business join businesscategory on business_id = bid where ";
            for(int i =0;i<busnSel.size();i++){
                if(i == busnSel.size() - 1){
                    query = query+"busncatgname = '"+busnSel.get(i)+"'";
                }else{
                    query = query+" busncatgname = '"+busnSel.get(i)+"' OR ";
                }
            }
            
            query = query+" "+and_or+" ";
            for(int i =0;i<busnSubSel.size();i++){
                if(i == busnSubSel.size() - 1){
                    query = query+"busnsubcat = '"+busnSel.get(i)+"'";
                }else{
                    query = query+" busnsubcat = '"+busnSel.get(i)+"' OR ";
                }
            }
            
//            System.out.println(query);
            PreparedStatement ps = con.prepareStatement(query);
//            int inc =1;
//           for(String str : busnSel){
//               System.out.println("assignment3.businessSearch.GetAttributes()"+str);
//               System.out.println("assignment3.businessSearch.GetAttributes()"+inc);
//               ps.setString(inc, str);
//           inc++;    
//           }
            AttributeList.removeAll();
            ResultSet res= ps.executeQuery();
            ArrayList AttCategorys = new ArrayList();
            while (res.next()){
                String business_id = (String) res.getString(1);
                String attributes = (String) res.getString(2);
                JSONObject attr = (JSONObject) new JSONParser().parse(attributes);
Map<String, Object> retMap = new Gson().fromJson(attributes, new TypeToken<HashMap<String, Object>>() {}.getType());
  Set<String> keys = retMap.keySet();
        for(String key: keys){
//            System.out.println(key);
//              String result = res.getString(1)+"\n";
                JCheckBox newChBox = new JCheckBox();
                newChBox.setText(key);
                AttCategorys.add(newChBox);
        }
            }
            AttributeList.setLayout(new GridLayout(0,2,10,10));
            for(Object ch : AttCategorys){
                AttributeList.add((Component) ch);
                AttributeList.revalidate();
                AttributeList.repaint();
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(businessSearch.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(businessSearch.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }//GEN-LAST:event_GetAttributes

    private void none(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_none
        // TODO add your handling code here:
        
    }//GEN-LAST:event_none

    private void executeQuery(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeQuery
        // TODO add your handling code here:
        
            	DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                from_date.setFormats(dateFormat);
                to_date.setFormats(dateFormat);
                DateFormat sysDate = new SimpleDateFormat("yyyy-MM");
                String fromdate = sysDate.format(from_date.getDate()).toString();
                String todate = sysDate.format(to_date.getDate()).toString();
                String star_ranged = (String) star_range.getSelectedItem().toString();
                String vote_ranged = (String) votes_range.getSelectedItem().toString();
                String star_data = (String) star_value.getText();
                String votes_data =(String) vote_value.getText();
                String and_or = (String) andor.getSelectedItem().toString();
            
        try {
            // TODO add your handling code here:
            Connection con = null;
            DBConnection dbcontection = new DBConnection();
            con = dbcontection.openConnection();
            String query ="";
            ArrayList<String> busnSel = new ArrayList<String>();
            for(Component c: main_category.getComponents()){
                if(c.getClass().equals(javax.swing.JCheckBox.class)){
                    JCheckBox jcb = (JCheckBox) c;
                    if(jcb.isSelected()){
                        busnSel.add(jcb.getText());
                    }
                }
            }
            ArrayList<String> busnSubSel = new ArrayList<String>();
            for(Component c: subCategory.getComponents()){
                if(c.getClass().equals(javax.swing.JCheckBox.class)){
                    JCheckBox jcb = (JCheckBox) c;
                    if(jcb.isSelected()){
                        busnSubSel.add(jcb.getText());
                    }
                }
            }
            
              ArrayList<String> AttributeSel = new ArrayList<String>();
            for(Component c: subCategory.getComponents()){
                if(c.getClass().equals(javax.swing.JCheckBox.class)){
                    JCheckBox jcb = (JCheckBox) c;
                    if(jcb.isSelected()){
                        AttributeSel.add(jcb.getText());
                    }
                }
            }
//            System.out.println("busnSel"+busnSel);
//            System.out.println("busnSubSel"+busnSubSel);
//            

            query = query+"select business_id,business_name,city,state,stars from business join businesscategory on business_id = bid where ";
            for(int i =0;i<busnSel.size();i++){
                if(i == busnSel.size() - 1){
                    query = query+"busncatgname = '"+busnSel.get(i)+"'";
                }else{
                    query = query+" busncatgname = '"+busnSel.get(i)+"' OR ";
                }
            }
            
            query = query+" "+and_or+" ";
            for(int i =0;i<busnSubSel.size();i++){
                if(i == busnSubSel.size() - 1){
                    query = query+"busnsubcat = '"+busnSel.get(i)+"'";
                }else{
                    query = query+" busnsubcat = '"+busnSel.get(i)+"' OR ";
                }
            }
            
            query = query+" "+and_or+" ";
            for(int i =0;i<AttributeSel.size();i++){
                if(i == busnSubSel.size() - 1){
                    query = query+"ATRRIBUTES = '"+AttributeSel.get(i)+"'";
                }else{
                    query = query+" ATRRIBUTES = '"+AttributeSel.get(i)+"' OR ";
                } 
            }
            
   String query1 = "select * from (select A.business_id,A.business_name,A.stars,A.city,A.state,A.number_of_votes from (select X.business_id,X.business_name,X.city,X.State,X.stars,Y.number_of_votes from ("+query+") X , (select count(review_id) as number_of_votes,business_id from VOTES_REVIEW group by business_id) Y where X.business_id = Y.business_id) A"
           +", (select * from reviews where to_char((datee),'yyyy-mm') >= '"+fromdate+"' and to_char((datee),'yyyy-mm') <= '"+todate+"') B where A.business_id = B.Business_id) where number_of_votes "+vote_ranged+" "+votes_data+
           " "+and_or+" stars "+star_ranged+" "+star_data; 
     business_query.setText(query);
   System.out.println(query1);  
            PreparedStatement ps = con.prepareStatement(query);
            ResultSet res= ps.executeQuery();
           while (res.next()){
                ResultSetMetaData rsmd = res.getMetaData();
            DefaultTableModel model = new DefaultTableModel();
            model.setColumnCount(rsmd.getColumnCount());
            Vector<String> cols = new Vector();
            for (int i = 0; i < rsmd.getColumnCount(); i++) {
                cols.add(rsmd.getColumnName(i + 1));
            }
            model.setColumnIdentifiers(cols);
            while (res.next()) {
                cols = new Vector();
                for (int i = 0; i < rsmd.getColumnCount(); i++) {
                    cols.add(res.getString(rsmd.getColumnName(i + 1)));
                }
                model.addRow(cols);
            }
            business_table.setModel(model); 
        }  
        } catch (SQLException ex) {
            Logger.getLogger(businessSearch.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_executeQuery

    private void getBusinessData(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_getBusinessData
        // TODO add your handling code here:
                 if (business_table.getSelectedRow() > -1){
             String Selected_Business = business_table.getValueAt(business_table.getSelectedRow(),0).toString();
             System.out.println(Selected_Business);
             queryingBusinessReviews(Selected_Business);
         }
    }//GEN-LAST:event_getBusinessData

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(businessSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(businessSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(businessSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(businessSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new businessSearch().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AttributeList;
    private javax.swing.JComboBox<String> andor;
    private javax.swing.JTextArea business_query;
    private javax.swing.JTable business_table;
    private org.jdesktop.swingx.JXDatePicker from_date;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox17;
    private javax.swing.JCheckBox jCheckBox18;
    private javax.swing.JCheckBox jCheckBox19;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox20;
    private javax.swing.JCheckBox jCheckBox21;
    private javax.swing.JCheckBox jCheckBox22;
    private javax.swing.JCheckBox jCheckBox23;
    private javax.swing.JCheckBox jCheckBox24;
    private javax.swing.JCheckBox jCheckBox25;
    private javax.swing.JCheckBox jCheckBox26;
    private javax.swing.JCheckBox jCheckBox27;
    private javax.swing.JCheckBox jCheckBox28;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JPanel main_category;
    private javax.swing.JScrollPane main_category_scroll;
    private javax.swing.JTextArea review_query;
    private javax.swing.JTable review_table;
    private javax.swing.JComboBox<String> star_range;
    private javax.swing.JTextField star_value;
    private javax.swing.JPanel subCategory;
    private org.jdesktop.swingx.JXDatePicker to_date;
    private javax.swing.JTextField vote_value;
    private javax.swing.JComboBox<String> votes_range;
    // End of variables declaration//GEN-END:variables

    private void queryingBusinessReviews(String Selected_Business) {
        try {
            String line = null;
            ArrayList<JSONObject> json = new ArrayList<JSONObject>();
            JSONObject obj;
            Connection con = null;
            DBConnection dbconnection = new DBConnection();
            con = dbconnection.openConnection();
            java.sql.Statement stmt = null;
            String query = "select r.user_id,y.user_name,r.review_id from reviews r join yelp_user y on r.user_id = y.user_id where r.business_id = '"+Selected_Business+"'";
            review_query.setText(query);
            System.out.println(query);
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            while(rs.next()){
                String user_id =rs.getString(1);
                String user_name = rs.getString(2);
                String review_id = rs.getString(3);
                ResultSetMetaData rsmd = rs.getMetaData();
                DefaultTableModel model = new DefaultTableModel();
                model.setColumnCount(rsmd.getColumnCount());
                Vector<String> cols = new Vector();
                for (int i = 0; i < rsmd.getColumnCount(); i++) {
                    cols.add(rsmd.getColumnName(i + 1));
                }
                model.setColumnIdentifiers(cols);
                while (rs.next()) {
                    cols = new Vector();
                    for (int i = 0; i < rsmd.getColumnCount(); i++) {
                        cols.add(rs.getString(rsmd.getColumnName(i + 1)));
                    }
                    model.addRow(cols);
                }
                review_table.setModel(model);
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(businessSearch.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
}
